version: '3.8'

networks:
  monitor-net:
    driver: bridge

services:
  postgres:
    image: postgres:16
    hostname: postgres
    environment:
      - POSTGRES_USER=demouser
      - POSTGRES_PASSWORD=demopassword
      - POSTGRES_DB=demodb
    volumes:
      # Mount a volume for persistent data
      - postgres_data:/var/lib/postgresql/data
      # Mount the init script to create tables on first launch
      - ./db-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - monitor-net

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    hostname: postgres_exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://demouser:demopassword@postgres:5432/demodb?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - monitor-net

  query-simulator:
    build:
      context: ./QuerySimulator
    environment:
      - DB_CONNECTION_STRING=Host=postgres;Port=5432;Username=demouser;Password=demopassword;Database=demodb
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus:v2.53.0
    hostname: prometheus
    volumes:
      # Mount our new config file
      - ./prometheus:/etc/prometheus/
      # Mount a volume for persistent tsdb data
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana-oss:11.1.0
    hostname: grafana
    ports:
      - "3000:3000"
    volumes:
      # Mount a volume for persistent grafana data (dashboards, etc)
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - monitor-net

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
